name: Build & Push Docker image

on:
  schedule:
    - cron: '28 5 * * *' # 2:28 AM UTC-03
  push:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.compare.outputs.should_run }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate commit info

      - name: Get last workflow run timestamp
        id: last_build
        uses: dpguthrie/get-created_at-timestamp-of-last-workflow@v0.1.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get last commit timestamp
        id: last_commit
        run: |
          # Get commit timestamp in ISO 8601, UTC
          last_commit=$(git log -1 --format=%cI)
          echo "last_commit=$last_commit" >> $GITHUB_OUTPUT

      - name: Compare timestamps
        id: compare
        run: |
          last_build="${{ steps.last_build.outputs.last_created_at }}"
          last_commit="${{ steps.last_commit.outputs.last_commit }}"

          if [ -z "$last_build" ] || [ "$last_build" = "null" ]; then
            # No previous build found â€” run build
            echo "should_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Convert to comparable timestamps (seconds since epoch)
          ts_last_build=$(date --date="$last_build" +%s)
          ts_last_commit=$(date --date="$last_commit" +%s)

          if [ "$ts_last_build" -lt "$ts_last_commit" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check
    if: needs.check.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
